<Activity mc:Ignorable="sap sap2010" x:Class="Misc_HandleException" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:ae="clr-namespace:Auxis_Misc.Email;assembly=Auxis.Misc" xmlns:al="clr-namespace:Auxis_Misc.Log;assembly=Auxis.Misc" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Exception thrown by the process." Name="in_Exception" Type="InArgument(s:Exception)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table with the notifications." Name="in_dt_Notifications" Type="InArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Full path of the notifications file." Name="in_NotificationsFile" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table used to determine which exceptions where already reported." Name="io_dt_ExceptionsControl" Type="InOutArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Returns a flag confirming that an exception was detected." Name="out_ExceptionFound" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1211.33333333333,4156</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Misc_HandleException_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Auxis_Misc.Log</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Auxis_Misc.Email</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Auxis.Misc</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Determine if an email needs to be sent with the System Exception, based on the configuration defined in the Exceptions tab in the Notifications file." DisplayName="Misc_HandleException" sap:VirtualizedContainerService.HintSize="918.666666666667,3991.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="ExceptionSource" />
      <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
      <Variable x:TypeArguments="sd:DataRow" Name="ExceptionRow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Exceptions" />
      <Variable x:TypeArguments="x:String" Name="SendEmail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <al:Write_To_Log DisplayName="Write To Log - Starting" sap:VirtualizedContainerService.HintSize="876.666666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_1" Message="Starting Misc_HandleException." />
    <ui:MultipleAssign DisplayName="Multiple Assign - Exception values" sap:VirtualizedContainerService.HintSize="876.666666666667,158.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionSource]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Exception.Source]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Exception.Message]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_ExceptionFound]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <al:Write_To_Log DisplayName="Write To Log - Details" sap:VirtualizedContainerService.HintSize="876.666666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_3" Message="[&quot;Processing exception &quot; + ExceptionMessage + &quot;.&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="For exceptions that need to be sent once a day, make sure that the process is using the latest data in case another performer already sent a notification." DisplayName="Reload the Notification table" sap:VirtualizedContainerService.HintSize="876.666666666667,181.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadRange AddHeaders="True" DataTable="[dt_Exceptions]" DisplayName="Read Range - Exceptions" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Exceptions" WorkbookPath="[in_NotificationsFile]">
        <ui:ReadRange.Range>
          <InArgument x:TypeArguments="x:String">
            <Literal x:TypeArguments="x:String" Value="" />
          </InArgument>
        </ui:ReadRange.Range>
      </ui:ReadRange>
    </Sequence>
    <Sequence DisplayName="Prepare the Exceptions control table" sap:VirtualizedContainerService.HintSize="876.666666666667,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[io_dt_ExceptionsControl Is Nothing]" DisplayName="If dt_ExceptionsControl hasn't been initialized" sap:VirtualizedContainerService.HintSize="522,428.666666666667" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <Sequence DisplayName="Initialize dt_ExceptionsControl" sap:VirtualizedContainerService.HintSize="376,274.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <al:Write_To_Log DisplayName="Write To Log - Initialize dt_ExceptionsControl" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Write_To_Log_10" Message="Initializing the dt_ExceptionsControl table." />
            <ui:FilterDataTable DataTable="[dt_Exceptions]" DisplayName="Filter Data Table - Exceptions" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[io_dt_ExceptionsControl]" SelectColumnsMode="Keep">
              <ui:FilterDataTable.Filters>
                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                  <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                </scg:List>
              </ui:FilterDataTable.Filters>
              <ui:FilterDataTable.SelectColumns>
                <scg:List x:TypeArguments="InArgument" Capacity="4">
                  <InArgument x:TypeArguments="x:String">["ExceptionMessage"]</InArgument>
                </scg:List>
              </ui:FilterDataTable.SelectColumns>
            </ui:FilterDataTable>
            <ui:AddDataColumn x:TypeArguments="x:Boolean" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="ExceptionThrown" DataTable="[io_dt_ExceptionsControl]" DefaultValue="False" DisplayName="Add Data Column - ExceptionThrown" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Try to find how to handle the error using an exact match of the Exception Message." DisplayName="Find the Exception using an exact match" sap:VirtualizedContainerService.HintSize="876.666666666667,131.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_Exceptions]" DisplayName="For Each Row - Exact match" sap:VirtualizedContainerService.HintSize="534.666666666667,584.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
            </ActivityAction.Argument>
            <If Condition="[row(&quot;ExceptionMessage&quot;).ToString.Equals(ExceptionMessage) AndAlso Not Boolean.Parse(row(&quot;UseRegex&quot;).ToString())]" DisplayName="If ExceptionMessage found using exact match" sap:VirtualizedContainerService.HintSize="484,432" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Exact match found" sap:VirtualizedContainerService.HintSize="304,278" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <al:Write_To_Log DisplayName="Write To Log - Exact match" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Write_To_Log_6" Message="Exception handling found using exact match." />
                  <Assign DisplayName="Assign - ExceptionRow using exact match" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataRow">[ExceptionRow]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataRow">[row]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Break DisplayName="Break exact match" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_2" />
                </Sequence>
              </If.Then>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
    <If sap2010:Annotation.AnnotationText="If the Exception was not found using an exact match, try now using Regex." Condition="[ExceptionRow Is Nothing]" DisplayName="Find the Exception using Regex" sap:VirtualizedContainerService.HintSize="876.666666666667,114.666666666667" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Use Regex" sap:VirtualizedContainerService.HintSize="376,240.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <al:Write_To_Log DisplayName="Write To Log - Use Regex" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Write_To_Log_17" Message="Exception not found using exact match, trying with Regex now." />
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Misc_HandleExceptionRegex workflow" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Exceptions\Misc_HandleExceptionRegex.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Exceptions">[dt_Exceptions]</InArgument>
              <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_ExceptionRow">[ExceptionRow]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionMessage">[ExceptionMessage]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Then>
    </If>
    <Sequence sap2010:Annotation.AnnotationText="Determine if an email needs to be sent.&#xA;The options are:&#xA;All: Send an email always.&#xA;Once per execution: look in dt_ExceptionsControl to determine if a message was already sent for the current execution.&#xA;Once per day: look in the Notifications file, in the Exceptions tab to determine if a exception was already sent today by this process or another instance." DisplayName="Determine if it is necessary to send an email" sap:VirtualizedContainerService.HintSize="876.666666666667,806.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign - Initialize SendEmail" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[SendEmail]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">All</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[ExceptionRow IsNot Nothing]" DisplayName="If ExceptionRow is not empty" sap:VirtualizedContainerService.HintSize="484,484" sap2010:WorkflowViewState.IdRef="If_15">
        <If.Then>
          <Sequence DisplayName="ExceptionRow is not empty" sap:VirtualizedContainerService.HintSize="391.333333333333,299.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_34">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <al:Write_To_Log DisplayName="Write To Log - ExceptionRow is not empty" sap:VirtualizedContainerService.HintSize="349.333333333333,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_28" Message="A record was found in the Exception table, proceding to classify the frequency." />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Misc_HandleExceptionFrequency workflow" sap:VirtualizedContainerService.HintSize="349,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Exceptions\Misc_HandleExceptionFrequency.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="sd:DataRow" x:Key="in_ExceptionRow">[ExceptionRow]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_SendEmail">[SendEmail]</OutArgument>
                <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_ExceptionsControl">[io_dt_ExceptionsControl]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <If sap2010:Annotation.AnnotationText="Send an email for those case where the notification is required and hasn't been sent yet." Condition="[Not SendEmail.Equals(&quot;None&quot;)]" DisplayName="If it needs to send an email" sap:VirtualizedContainerService.HintSize="876.666666666667,1492" sap2010:WorkflowViewState.IdRef="If_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Send email" sap:VirtualizedContainerService.HintSize="840,1276.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <al:Write_To_Log DisplayName="Write To Log - Send Email" sap:VirtualizedContainerService.HintSize="798,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_20" Message="Sending exception email" />
          <If Condition="[CBOOL(in_Config(&quot;NotificationWithScreenshotClient&quot;).tostring)]" DisplayName="If Screenshot Required Client" sap:VirtualizedContainerService.HintSize="798,512" sap2010:WorkflowViewState.IdRef="If_16">
            <If.Then>
              <Sequence DisplayName="Send error notification with screenshot to the Client" sap:VirtualizedContainerService.HintSize="376,348" sap2010:WorkflowViewState.IdRef="Sequence_35">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <al:Write_To_Log DisplayName="Write To Log - Screenshot to client" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_29" Message="Sending error notification with screenshot to the client." />
                <ae:Send_Error CCAddress="{x:Null}" OutlookAccount="{x:Null}" OutlookOnBehalfOf="{x:Null}" SubjectValues="{x:Null}" ToAddress="{x:Null}" BodyValues="[{ExceptionSource, ExceptionMessage}]" DisplayName="Send Error - Exception with Screenshot Client" sap:VirtualizedContainerService.HintSize="334,135.333333333333" sap2010:WorkflowViewState.IdRef="Send_Error_2" NotificationID="UnexpectedErrorClient" NotificationsDT="[in_dt_Notifications]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Send error notification without screenshot to the Client" sap:VirtualizedContainerService.HintSize="376,348" sap2010:WorkflowViewState.IdRef="Sequence_36">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <al:Write_To_Log DisplayName="Write To Log - No screenshot to client" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_30" Message="Sending error notification without screenshot to the client." />
                <ae:Send_Notification AttachmentFolders="{x:Null}" Attachments="{x:Null}" CCAddress="{x:Null}" OutlookAccount="{x:Null}" OutlookOnBehalfOf="{x:Null}" SubjectValues="{x:Null}" ToAddress="{x:Null}" BodyValues="[{ExceptionSource, ExceptionMessage}]" DisplayName="Send Notification Without Screenshot Client" sap:VirtualizedContainerService.HintSize="334,135.333333333333" sap2010:WorkflowViewState.IdRef="Send_Notification_1" NotificationID="UnexpectedErrorClient" NotificationsDt="[in_dt_Notifications]" />
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[CBOOL(in_Config(&quot;NotificationWithScreenshotSupporTeam&quot;).tostring)]" DisplayName="If Screenshot Required Support" sap:VirtualizedContainerService.HintSize="798,512" sap2010:WorkflowViewState.IdRef="If_18">
            <If.Then>
              <Sequence DisplayName="Send notification with screenshot to Support" sap:VirtualizedContainerService.HintSize="376,348" sap2010:WorkflowViewState.IdRef="Sequence_37">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <al:Write_To_Log DisplayName="Write To Log - Screenshot to Support" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_32" Message="Sending error notification with screenshot to support." />
                <ae:Send_Error CCAddress="{x:Null}" OutlookAccount="{x:Null}" OutlookOnBehalfOf="{x:Null}" SubjectValues="{x:Null}" ToAddress="{x:Null}" BodyValues="[{ExceptionSource, ExceptionMessage}]" DisplayName="Send Error - Exception with Screenshot Support Team" sap:VirtualizedContainerService.HintSize="334,135.333333333333" sap2010:WorkflowViewState.IdRef="Send_Error_4" NotificationID="UnexpectedErrorSupport" NotificationsDT="[in_dt_Notifications]" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Send notification without screenshot to Support" sap:VirtualizedContainerService.HintSize="376,348" sap2010:WorkflowViewState.IdRef="Sequence_38">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <al:Write_To_Log DisplayName="Write To Log - No screenshot to Support" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_33" Message="Sending error notification without screenshot to support." />
                <ae:Send_Notification AttachmentFolders="{x:Null}" Attachments="{x:Null}" CCAddress="{x:Null}" OutlookAccount="{x:Null}" OutlookOnBehalfOf="{x:Null}" SubjectValues="{x:Null}" ToAddress="{x:Null}" BodyValues="[{ExceptionSource, ExceptionMessage}]" DisplayName="Send Notification Without Screenshot Support Team" sap:VirtualizedContainerService.HintSize="334,135.333333333333" sap2010:WorkflowViewState.IdRef="Send_Notification_2" NotificationID="UnexpectedErrorSupport" NotificationsDt="[in_dt_Notifications]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <Switch x:TypeArguments="x:String" DisplayName="Switch by type of notification, to update the controls" Expression="[SendEmail.ToUpper()]" sap:VirtualizedContainerService.HintSize="876.666666666667,272.666666666667" sap2010:WorkflowViewState.IdRef="Switch`1_2">
      <Sequence x:Key="ONCE PER DAY" DisplayName="Once per day, flag as complete" sap:VirtualizedContainerService.HintSize="576.666666666667,970.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_32">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <al:Write_To_Log DisplayName="Write To Log - Once per day control" sap:VirtualizedContainerService.HintSize="534.666666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_26" Message="Mark the exception as thrown in the Exceptions tab inside the Notifications file." />
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_Exceptions]" DisplayName="ForEachRow in Exceptions" sap:VirtualizedContainerService.HintSize="534.666666666667,800.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <If Condition="[row(&quot;ExceptionMessage&quot;).ToString().Equals(ExceptionRow(&quot;ExceptionMessage&quot;).ToString())]" DisplayName="If Exception is found" sap:VirtualizedContainerService.HintSize="484,648" sap2010:WorkflowViewState.IdRef="If_14">
                <If.Then>
                  <Sequence DisplayName="Exception found, flag it as thrown" sap:VirtualizedContainerService.HintSize="376,463.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <al:Write_To_Log DisplayName="Write To Log - Add TimeStamp" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_27" Message="Adding the TimeStamp at which the notification was sent." />
                    <Assign DisplayName="Assign - TimeStamp" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("TimeStamp")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Misc_SaveExcel workflow" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Misc\Misc_SaveExcel.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ExcelFilename">[in_NotificationsFile]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">Exceptions</InArgument>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Data">[dt_Exceptions]</InArgument>
                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_ReportError">True</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:Break DisplayName="Break - Once per day" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                  </Sequence>
                </If.Then>
              </If>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence x:Key="ONCE PER EXECUTION" DisplayName="Once per Execution" sap:VirtualizedContainerService.HintSize="576.666666666667,844" sap2010:WorkflowViewState.IdRef="Sequence_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <al:Write_To_Log DisplayName="Write_To_Log - Complete Once per execution" sap:VirtualizedContainerService.HintSize="534.666666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_21" Message="Flagging the exception as thrown in the Exceptions Control table." />
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[io_dt_ExceptionsControl]" DisplayName="For Each Row - ExceptionsControl" sap:VirtualizedContainerService.HintSize="534.666666666667,674" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <If Condition="[row(&quot;ExceptionMessage&quot;).ToString().Equals(ExceptionRow(&quot;ExceptionMessage&quot;).ToString())]" DisplayName="If Exception found in the Control table" sap:VirtualizedContainerService.HintSize="484,521.333333333333" sap2010:WorkflowViewState.IdRef="If_13">
                <If.Then>
                  <Sequence DisplayName="ExceptionControl found" sap:VirtualizedContainerService.HintSize="376,336.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <al:Write_To_Log DisplayName="Write To Log - Exception Thrown" sap:VirtualizedContainerService.HintSize="334,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_25" Message="Mark the exception as thrown in the Control table." />
                    <Assign DisplayName="Assign - Exception Thrown" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[row("ExceptionThrown")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[true]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:Break DisplayName="Break ExceptionControl" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                  </Sequence>
                </If.Then>
              </If>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
      </Sequence>
    </Switch>
    <al:Write_To_Log DisplayName="Write To Log - Completing" sap:VirtualizedContainerService.HintSize="876.666666666667,80.6666666666667" sap2010:WorkflowViewState.IdRef="Write_To_Log_2" Message="Completing Misc_HandleException." />
  </Sequence>
</Activity>